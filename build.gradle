/*
 * create snapshot: gradle makeSnapshot
 * create release: gradle makeRelease
 */

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'sonar'

idea {
	project {
		jdkName = '1.6'
	}
	module {
		downloadSources = false
		downloadJavadoc = false
	}
}

repositories {
	mavenCentral()
}

configurations {
	jacoco
}

dependencies {
	testCompile 'junit:junit:4.10'
	jacoco group: "org.jacoco", name: "org.jacoco.agent", version: "0.5.3.201107060350", classifier: "runtime"
}

group='org.svenehrke'

uploadArchives {
	repositories.mavenDeployer {
		repository(url: "${userDeploymentRepoBaseURL}/releases")
	}
}

// see http://evgeny-goldin.com/wiki/Gradle  (section 'Setting the repository URL at the time the DAG is ready')
gradle.taskGraph.whenReady { tg ->
	if (!tg.hasTask(':makeRelease')) {
		version += '-SNAPSHOT'
		uploadArchives.repositories['mavenDeployer'].repository.url = "${userDeploymentRepoBaseURL}/snapshots"
	}
}

task makeSnapshot(dependsOn: 'uploadArchives')

task makeRelease(dependsOn: 'uploadArchives')

task wrapper(type: Wrapper) {
	gradleVersion = '1.1'
}

sonar {
  server {
    url = System.getProperty("sonar.host.url") ?: "http://localhost:9000/"
  }

/*
  database {
    url = System.getProperty("sonar.jdbc.url") ?: "jdbc:derby://localhost:1527/sonar"
    driverClassName = System.getProperty("sonar.jdbc.driver") ?: "org.apache.derby.jdbc.ClientDriver"
    username = System.getProperty("sonar.jdbc.username") ?: "sonar"
    password = System.getProperty("sonar.jdbc.password") ?: "sonar"
  }
*/

  project {
    withProjectProperties { props ->
      props["sonar.core.codeCoveragePlugin"] = "jacoco"
    }
  }
}

